/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define ACT 1
#define SYM 2
#define NUM 3
#define FUNC 4

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
        };
        

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
        &kp Q           &kp W           &kp E           &kp R       &kp T                   &kp Y           &kp U       &kp I       &kp O           &kp P   
        &kp A           &hm LSHIFT S    &hm LCTRL D     &hm LALT F  &hm LGUI G              &hm LGUI H      &hm RALT J  &hm LCTRL K &hm RSHIFT L    &hm LS(N2) SQT
        &kp LSHFT       &kp Z           &kp X           &kp C       &kp V                   &kp B           &kp N       &kp M       &mt COMMA DOT   &kp DOT
                                        &tog NUM        &mo NUM     &mo ACT                 &lt SYM SPACE   &mo ACT     &mo FUNC
                        >;
                };
                action_layer {
                        bindings = <
        &kp ESC         &mkp MB4        &kp END         &mkp MB5        &kp T               &kp Y       &kp U       &kp UP      &kp DEL         &kp BSPC   
        &kp TAB         &mt LSHIFT S    &kp LCTRL       &kp LALT        &kp LGUI            &kp HOME    &kp LEFT    &kp DOWN    &kp RIGHT       &kp RET
        &kp LSHFT       &mkp MB3        &mkp MB2        &mkp MB1        &kp V               &kp B       &kp N       &kp M       &kp COMMA       &kp DOT
                                        &kp LGUI        &trans          &trans              &trans      &trans      &kp RALT
                        >;
                };

                symbol_layer {
                        bindings = <
        &kp QMARK       &kp PLUS    &kp EQUAL   &kp LS(N8)              &kp LS(NUHS)        &kp RA(N4)  &kp UNDER   &mt RBKT LBKT   &kp LS(NUBS)            &mt LS(N0) LS(N9)
        &kp LS(N7)      &kp SEMI    &kp LS(N4)  &mt NUBS FSLH           &kp GRAVE           &kp NUHS    &none       &kp COLON       &mt LS(DOT) LS(COMMA)   &kp LS(N2)
        &kp LSHFT       &kp LS(N5)  &kp LS(SQT) &mt LS(RBKT) LS(LBKT)   &kp LS(N6)          &kp B       &kp LS(N1)  &kp MINUS       &kp COMMA               &kp LS(DOT)
                                    &kp LGUI    &trans                  &trans              &trans      &trans      &kp RALT
                        >;
                };

                number_layer {
                        bindings = <
        &trans          &trans          &kp UP          &trans          &trans              &kp MINUS       &kp N7          &kp N8      &kp N9             &kp BSPC
        &trans          &kp LEFT        &kp DOWN        &kp RIGHT       &trans              &kp DOT         &kp N4          &kp N5      &kp N6             &kp RET
        &trans          &trans          &trans          &trans          &trans              &kp N0          &kp N1          &kp N2      &kp N3             &trans
                                        &trans          &trans          &trans              &trans          &trans          &trans
                        >;
                };

                function_layer {
                        bindings = <
        &kp F1          &kp F2          &kp F3          &kp F4          &kp F5              &trans          &trans          &trans          &trans          &trans
        &kp F6          &kp F7          &kp F8          &kp F9          &kp F10             &trans          &trans          &trans          &trans          &trans
        &trans          &kp F11         &kp F12         &trans          &trans              &trans          &trans          &trans          &trans          &trans
                                        &trans          &trans          &trans              &trans          &trans          &trans
                        >;
                };
        };
};
